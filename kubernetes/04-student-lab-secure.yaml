# Deployment completo Student Lab (VERSIONE CORRETTA)
# Include: Client (Code-Server + Linux), Server1, Server2
# FIXES:
#   - initContainer per aumentare fs.inotify limits (risolve "too many open files")
#   - CPU ratio corretto (125m request per 500m limit = 4x)
#   - Capabilities complete per systemd 257 (Rocky Linux 10)
#   - seccompProfile: Unconfined per systemd
#   - cgroup mount readOnly: false
#   - Variabile env container=docker per systemd

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: student-lab
  namespace: student1

---
# CLIENT POD (Code-Server + Linux)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
  namespace: student1
  labels:
    app: client
    student: "1"
    monitor: student-lab
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: client
      role: workstation
  template:
    metadata:
      labels:
        app: client
        role: workstation
        student: "1"
        monitor: student-lab
    spec:
      serviceAccountName: student-lab
      
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: "OnRootMismatch"
      
      # ============================================
      # INIT CONTAINER: Fix "too many open files"
      # ============================================
      initContainers:
      - name: sysctl-config
        image: busybox:1.36
        command:
        - sh
        - -c
        - |
          sysctl -w fs.inotify.max_user_watches=524288
          sysctl -w fs.inotify.max_user_instances=512
          sysctl -w fs.file-max=2097152
          echo "Sysctl limits configured successfully"
        securityContext:
          privileged: true
          runAsUser: 0
      
      containers:
      # ============================================
      # CODE-SERVER CONTAINER
      # ============================================
      - name: code-server
        image: codercom/code-server:4.20.0
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        
        env:
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: student-credentials
              key: code-server-password
        - name: DOCKER_USER
          value: "coder"
        - name: TELEMETRY_DISABLED
          value: "1"
        
        volumeMounts:
        - name: workspace
          mountPath: /home/coder/project
        
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
        
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      
      # ============================================
      # LINUX CONTAINER (con Cockpit + systemd)
      # ============================================
      - name: linux
        image: vcnngr.io/linux-lab:latest
        ports:
        - containerPort: 22
          name: ssh
          protocol: TCP
        - containerPort: 9090
          name: cockpit
          protocol: TCP
        
        env:
        - name: SUDO_MODE
          value: "limited"
        - name: CONTAINER_ROLE
          value: "client"
        - name: container
          value: "docker"
        # NOTA: STUDENT_PASSWORD sarà aggiunta via kubectl patch dallo script
        
        volumeMounts:
        - name: ssh-config
          mountPath: /home/student/.ssh/config
          subPath: config
        - name: workspace
          mountPath: /home/student/workspace
        - name: ssh-keys
          mountPath: /tmp/ssh-keys
          readOnly: true
        - name: run
          mountPath: /run
        - name: run-lock
          mountPath: /run/lock
        - name: tmp
          mountPath: /tmp
        - name: cgroup
          mountPath: /sys/fs/cgroup
          readOnly: false
        
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
            - ALL
            add:
            # Core systemd requirements
            - SYS_ADMIN
            - SYS_RESOURCE
            - SYS_BOOT
            - SYS_TIME
            # Networking
            - NET_ADMIN
            - NET_BIND_SERVICE
            - NET_RAW
            # File system
            - CHOWN
            - DAC_OVERRIDE
            - DAC_READ_SEARCH
            - FOWNER
            - FSETID
            - MKNOD
            # Process management
            - KILL
            - SETGID
            - SETUID
            - SETPCAP
            - SETFCAP
            - SYS_CHROOT
            - SYS_PTRACE
            - SYS_NICE
            - SYS_TTY_CONFIG
            # IPC
            - IPC_LOCK
            - IPC_OWNER
            # Audit & logging
            - AUDIT_WRITE
            - AUDIT_CONTROL
            - SYSLOG
          privileged: false
          runAsNonRoot: false
          readOnlyRootFilesystem: false
          seccompProfile:
            type: Unconfined
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "150m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - systemctl is-active ssh || systemctl is-active sshd
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          tcpSocket:
            port: 22
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      
      volumes:
      - name: ssh-config
        configMap:
          name: ssh-config
      - name: workspace
        persistentVolumeClaim:
          claimName: student-workspace-pvc
      - name: ssh-keys
        secret:
          secretName: ssh-keys
          defaultMode: 0600
      - name: run
        emptyDir:
          medium: Memory
          sizeLimit: 100Mi
      - name: run-lock
        emptyDir:
          medium: Memory
          sizeLimit: 10Mi
      - name: tmp
        emptyDir:
          medium: Memory
          sizeLimit: 500Mi
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

---
# Service per Client (con porta Cockpit)
apiVersion: v1
kind: Service
metadata:
  name: client
  namespace: student1
  labels:
    app: client
    monitor: student-lab
spec:
  selector:
    app: client
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: ssh
    port: 22
    targetPort: 22
    protocol: TCP
  - name: cockpit
    port: 9090
    targetPort: 9090
    protocol: TCP
  type: ClusterIP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---
# SERVER 1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server1
  namespace: student1
  labels:
    app: server1
    student: "1"
    monitor: student-lab
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server1
      role: server
  template:
    metadata:
      labels:
        app: server1
        role: server
        student: "1"
        monitor: student-lab
    spec:
      serviceAccountName: student-lab
      
      securityContext:
        fsGroup: 1001
      
      # ============================================
      # INIT CONTAINER: Fix "too many open files"
      # ============================================
      initContainers:
      - name: sysctl-config
        image: busybox:1.36
        command:
        - sh
        - -c
        - |
          sysctl -w fs.inotify.max_user_watches=524288
          sysctl -w fs.inotify.max_user_instances=512
          sysctl -w fs.file-max=2097152
          echo "Sysctl limits configured successfully"
        securityContext:
          privileged: true
          runAsUser: 0
      
      containers:
      - name: linux
        image: vcnngr.io/linux-lab:latest
        ports:
        - containerPort: 22
          name: ssh
        
        env:
        - name: SERVER_NAME
          value: "server1"
        - name: SUDO_MODE
          value: "limited"
        - name: CONTAINER_ROLE
          value: "server"
        - name: container
          value: "docker"
        # NOTA: STUDENT_PASSWORD sarà aggiunta via kubectl patch dallo script
        
        volumeMounts:
        - name: ssh-keys
          mountPath: /tmp/ssh-keys
          readOnly: true
        - name: run
          mountPath: /run
        - name: run-lock
          mountPath: /run/lock
        - name: tmp
          mountPath: /tmp
        - name: cgroup
          mountPath: /sys/fs/cgroup
          readOnly: false
        
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
            - ALL
            add:
            # Core systemd
            - SYS_ADMIN
            - SYS_RESOURCE
            - SYS_BOOT
            # Networking (SSH server)
            - NET_BIND_SERVICE
            - NET_ADMIN
            # File system
            - CHOWN
            - DAC_OVERRIDE
            - DAC_READ_SEARCH
            - FOWNER
            - MKNOD
            # Process management
            - KILL
            - SETGID
            - SETUID
            - SETPCAP
            - SYS_CHROOT
            - SYS_NICE
            - SYS_TTY_CONFIG
            # IPC
            - IPC_LOCK
            - IPC_OWNER
            # Audit & logging
            - AUDIT_WRITE
            - AUDIT_CONTROL
          privileged: false
          runAsNonRoot: false
          readOnlyRootFilesystem: false
          seccompProfile:
            type: Unconfined
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "125m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - systemctl is-active ssh || systemctl is-active sshd
          initialDelaySeconds: 60
          periodSeconds: 30
        
        readinessProbe:
          tcpSocket:
            port: 22
          initialDelaySeconds: 30
          periodSeconds: 10
      
      volumes:
      - name: ssh-keys
        secret:
          secretName: ssh-keys
          defaultMode: 0600
          items:
          - key: id_rsa.pub
            path: id_rsa.pub
      - name: run
        emptyDir:
          medium: Memory
      - name: run-lock
        emptyDir:
          medium: Memory
      - name: tmp
        emptyDir:
          medium: Memory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

---
apiVersion: v1
kind: Service
metadata:
  name: server1
  namespace: student1
  labels:
    app: server1
    monitor: student-lab
spec:
  selector:
    app: server1
  ports:
  - name: ssh
    port: 22
    targetPort: 22
  type: ClusterIP

---
# SERVER 2
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server2
  namespace: student1
  labels:
    app: server2
    student: "1"
    monitor: student-lab
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: server2
      role: server
  template:
    metadata:
      labels:
        app: server2
        role: server
        student: "1"
        monitor: student-lab
    spec:
      serviceAccountName: student-lab
      
      securityContext:
        fsGroup: 1001
      
      # ============================================
      # INIT CONTAINER: Fix "too many open files"
      # ============================================
      initContainers:
      - name: sysctl-config
        image: busybox:1.36
        command:
        - sh
        - -c
        - |
          sysctl -w fs.inotify.max_user_watches=524288
          sysctl -w fs.inotify.max_user_instances=512
          sysctl -w fs.file-max=2097152
          echo "Sysctl limits configured successfully"
        securityContext:
          privileged: true
          runAsUser: 0
      
      containers:
      - name: linux
        image: vcnngr.io/linux-lab:latest
        ports:
        - containerPort: 22
          name: ssh
        
        env:
        - name: SERVER_NAME
          value: "server2"
        - name: SUDO_MODE
          value: "limited"
        - name: CONTAINER_ROLE
          value: "server"
        - name: container
          value: "docker"
        # NOTA: STUDENT_PASSWORD sarà aggiunta via kubectl patch dallo script
        
        volumeMounts:
        - name: ssh-keys
          mountPath: /tmp/ssh-keys
          readOnly: true
        - name: run
          mountPath: /run
        - name: run-lock
          mountPath: /run/lock
        - name: tmp
          mountPath: /tmp
        - name: cgroup
          mountPath: /sys/fs/cgroup
          readOnly: false
        
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            drop:
            - ALL
            add:
            # Core systemd
            - SYS_ADMIN
            - SYS_RESOURCE
            - SYS_BOOT
            # Networking (SSH server)
            - NET_BIND_SERVICE
            - NET_ADMIN
            # File system
            - CHOWN
            - DAC_OVERRIDE
            - DAC_READ_SEARCH
            - FOWNER
            - MKNOD
            # Process management
            - KILL
            - SETGID
            - SETUID
            - SETPCAP
            - SYS_CHROOT
            - SYS_NICE
            - SYS_TTY_CONFIG
            # IPC
            - IPC_LOCK
            - IPC_OWNER
            # Audit & logging
            - AUDIT_WRITE
            - AUDIT_CONTROL
          privileged: false
          runAsNonRoot: false
          readOnlyRootFilesystem: false
          seccompProfile:
            type: Unconfined
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "125m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - systemctl is-active ssh || systemctl is-active sshd
          initialDelaySeconds: 60
          periodSeconds: 30
        
        readinessProbe:
          tcpSocket:
            port: 22
          initialDelaySeconds: 30
          periodSeconds: 10
      
      volumes:
      - name: ssh-keys
        secret:
          secretName: ssh-keys
          defaultMode: 0600
          items:
          - key: id_rsa.pub
            path: id_rsa.pub
      - name: run
        emptyDir:
          medium: Memory
      - name: run-lock
        emptyDir:
          medium: Memory
      - name: tmp
        emptyDir:
          medium: Memory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory

---
apiVersion: v1
kind: Service
metadata:
  name: server2
  namespace: student1
  labels:
    app: server2
    monitor: student-lab
spec:
  selector:
    app: server2
  ports:
  - name: ssh
    port: 22
    targetPort: 22
  type: ClusterIP
